@page "/edit/"
@using System.Collections.Generic
@using System.Reflection
@using System.Linq.Expressions
@using BO
@using BL
@inject IJSRuntime JsRuntime;
@inherits TaskEditModel

@if (task != null)
{
 <div style="padding: 0">
  <div>
   <h4>Task</h4>
   <form>
    <!--Schaltflächen-->
    <button type="button" title="Änderungen speichern"
            onclick="@Save" class="btn btn-success">
     <span class="glyphicon  glyphicon-floppy-save"></span> <span class="hidden-xs" i18n>Save</span>
    </button>
    <button type="button" title="Änderungen verwerfen" onclick="@Cancel" class="btn btn-warning"><span class="glyphicon glyphicon-remove"></span> <span class="hidden-xs" i18n>Cancel</span></button>
    <!--Titel-->
    <div class="form-group">
     <label for="tasktitle">Titel</label>
     <input id="tasktitle" name="tasktitle" type="text" bind="@task.Title" required class="form-control" />
    </div>
    <!--Validatorausgabe Titel-->
    @*<div [hidden]="tasktitle.valid || tasktitle.pristine" class="alert alert-danger ">
      Der Titel darf nicht leer sein!
     </div>*@

    <div class="row">
     <!--Wichtigkeit-->
     <span class="col-xs-3" style="padding-right: 2px">
      <div class="form-group ">
       <label for="taskimportance " i18n>Importance</label>
       <select id="taskimportance" name="taskimportance" bind="@task.ImportanceNN" class="form-control">
        <option value="A">A</option>
        <option value="B">B</option>
        <option value="C">C</option>
       </select>
      </div>
     </span>
     <!--Aufwand-->
     <span class="col-xs-3" style="padding-left: 2px; padding-right: 2px">
      <label for="taskeffort " i18n>Effort</label>
      <input id="taskeffort" name="taskeffort" bind="@task.Effort" class="form-control" />

      @*TODO: type="number" https://github.com/aspnet/AspNetCore/issues/5610*@
     </span>
     <!--Fälligkeit-->
     <span class="col-xs-6" style="padding-left: 2px; ">
      <div class="form-group">
       <label for="taskDue" i18n>Due</label>

       <input id="taskdue" name="taskdue" format-value="dd.MM.yyyy" type="datetime" bind="@task.DueNN" class="form-control" />

       @*<datetime id="taskDue" name="taskDue " [(ngModel)]="task.due"
  [datepicker]="{autoclose: true, format: 'dd.MM.yyyy'}" [timepicker]="false">*@
       @*</datetime>*@
      </div>
     </span>
    </div>
    <!--Ende row-->
    <!--Unteraufgaben-->
    @*<SubTaskList [task]="task " (subTaskListChangedEvent)="reload($event) "></SubTaskList>*@
    <!--Notiz-->
    <div class="form-group ">
     <label for="tasknote" i18n>Note</label>
     <textarea id="tasknote" name="tasknote " rows="5 " bind="@task.Note" class="form-control "></textarea>
    </div>
   </form>
  </div>
 </div>
}



@functions {

}